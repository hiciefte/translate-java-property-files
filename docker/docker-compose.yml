version: '3.8'

services:
  translator:
    build:
      context: ..  # Set build context to the project root
      dockerfile: docker/Dockerfile # Path to Dockerfile from project root
      args:
        HOST_UID: ${HOST_UID:-1000}
        HOST_GID: ${HOST_GID:-1000}
    container_name: translation_service_runner
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TX_TOKEN=${TX_TOKEN}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      # HOST_UID and HOST_GID for user creation are passed via build args from .env
      # Forcing UID/GID for debugging .env file issues
      # - HOST_UID=502
      # - HOST_GID=20
      # - PUID=502
      # - PGID=20
    volumes:
      # Mount the Docker-specific config (now located in docker/) to the default config path in the app
      - ./config.docker.yaml:/app/config.yaml:ro
      
      # Mount the glossary file (located in project root)
      - ../glossary.json:/app/glossary.json:ro
      
      # Mount SSH keys and Git config from host user's home (read-only for appuser)
      - ~/.ssh:/home/appuser/.ssh:ro
      # Mount host GPG data to a temporary root-accessible location for entrypoint to copy
      # - ~/.gnupg:/root/.gnupg_host_mount:ro 
      # - ~/.gitconfig:/home/appuser/.gitconfig:ro
      
      # Mount logs directory (in project root) for persistence
      - ../logs:/app/logs

# Note: You will need a .env file in the project root directory
# (translate-java-property-files) with API keys and HOST_UID/GID.
# Example .env file:
# OPENAI_API_KEY=your_openai_key
# TX_TOKEN=your_transifex_token
# GITHUB_TOKEN=your_github_personal_access_token
# HOST_UID=$(id -u) # Should be numeric, e.g., 501
# HOST_GID=$(id -g) # Should be numeric, e.g., 20 