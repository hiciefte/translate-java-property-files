name: Build and Verify

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  verify:
    name: Lint, Scan, and Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Lint Dockerfile with Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: docker/Dockerfile
          failure-threshold: warning # Fails on warnings or errors

      - name: Scan Python dependencies for vulnerabilities
        run: |
          pip install pip-audit
          pip-audit -r requirements.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create dummy secret files for build
        run: |
          mkdir -p secrets/gpg_bot_key
          touch secrets/gpg_bot_key/bot_public_key.asc
          touch secrets/gpg_bot_key/bot_secret_key.asc
          echo "DUMMY_KEY=123" > docker/.env

      - name: Build Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: false # Do not push the image
          tags: translator-app:ci-${{ github.sha }}
          load: true # Load the image into the local Docker daemon for scanning

      - name: Scan built image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'translator-app:ci-${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH' 